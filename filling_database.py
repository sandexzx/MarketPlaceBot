import os
import random
import asyncio
from datetime import datetime, timedelta
from pathlib import Path
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from bot.database.models import Advertisement, Photo, Base
from bot.config import DATABASE_URL, MEDIA_DIR, BOT_TOKEN, ADMIN_IDS
from aiogram import Bot
import logging
from aiogram.types import FSInputFile
from datetime import UTC 

# –ü—Ä–∏–º–µ—Ä—ã –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
DESCRIPTIONS = [
    "–£—é—Ç–Ω–∞—è –æ–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –°–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç, –≤—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –º–µ–±–µ–ª—å –∏ —Ç–µ—Ö–Ω–∏–∫–∞. –†—è–¥–æ–º –º–µ—Ç—Ä–æ, –º–∞–≥–∞–∑–∏–Ω—ã, –ø–∞—Ä–∫.",
    "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –¥–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º. –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç, –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä.",
    "–°–≤–µ—Ç–ª–∞—è —Å—Ç—É–¥–∏—è –≤ –Ω–æ–≤–æ–º –ñ–ö. –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—Ç–¥–µ–ª–∫–∞, –º–µ–±–µ–ª—å, –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞. –ó–∞–∫—Ä—ã—Ç–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è, –ø–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥.",
    "–ö–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω–∞—è —Ç—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ç–∏—Ö–æ–º —Ä–∞–π–æ–Ω–µ. –†–∞–∑–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã, –¥–≤–∞ —Å–∞–Ω—É–∑–ª–∞, –≥–∞—Ä–¥–µ—Ä–æ–±–Ω–∞—è.",
    "–°—Ç–∏–ª—å–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞-—Å—Ç—É–¥–∏—è —Å —Ç–µ—Ä—Ä–∞—Å–æ–π. –ü–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –æ–∫–Ω–∞, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ–±–µ–ª—å, –≤—Å—è —Ç–µ—Ö–Ω–∏–∫–∞. –û—Ö—Ä–∞–Ω—è–µ–º–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è."
]

# –ü—Ä–∏–º–µ—Ä—ã –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
PROMO_DESCRIPTIONS = [
    "üåü –°–ü–ï–¶–ò–ê–õ–¨–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï! –ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –∞—Ä–µ–Ω–¥—ã —Å–æ —Å–∫–∏–¥–∫–æ–π 50%! –£—Å–ø–µ–π—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É –º–µ—á—Ç—ã!",
    "üéâ –ê–ö–¶–ò–Ø! –ü—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–π –∞—Ä–µ–Ω–¥–µ ‚Äì –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É–±–æ—Ä–∫–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü! –¢–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∂–∏–ª—å–µ –æ—Ç –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞!",
    "‚≠êÔ∏è –≠–ö–°–ö–õ–Æ–ó–ò–í! VIP-–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º —Ü–µ–Ω—Ç—Ä–µ. –î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç, –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–µ –æ–∫–Ω–∞, —Ç–µ—Ä—Ä–∞—Å–∞.",
    "üí´ –ì–û–†–Ø–ß–ï–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï! –ù–æ–≤—ã–π –ñ–ö –±–∏–∑–Ω–µ—Å-–∫–ª–∞—Å—Å–∞. –ü–µ—Ä–≤—ã–º –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞–º ‚Äì –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ñ–∏—Ç–Ω–µ—Å–∞!",
    "üèÜ –ü–†–ï–ú–ò–£–ú-–ö–í–ê–†–¢–ò–†–´ –≤ —ç–ª–∏—Ç–Ω–æ–º –¥–æ–º–µ! –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –∞—Ä–µ–Ω–¥—ã. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!"
]

# –¶–µ–Ω–æ–≤—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã (–≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫ –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
PRICES = [
    "45.000‚ÇΩ/–º–µ—Å—è—Ü",
    "60.000‚ÇΩ/–º–µ—Å—è—Ü",
    "75.000‚ÇΩ/–º–µ—Å—è—Ü",
    "85.000‚ÇΩ/–º–µ—Å—è—Ü",
    "120.000‚ÇΩ/–º–µ—Å—è—Ü"
]

# –ö–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
MANAGERS = [
    "@rental_manager_anna",
    "@rental_expert_mike",
    "@home_finder_kate",
    "@property_pro_alex",
    "@rent_master_maria"
]

def get_random_images(num_images):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ media"""
    image_files = list(Path(MEDIA_DIR).glob("*.PNG"))
    if not image_files:
        raise Exception(f"No PNG images found in {MEDIA_DIR}")
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–π–ª—ã, –º–æ–∂–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è
    selected_images = random.choices(image_files, k=num_images)
    return [str(img) for img in selected_images]

async def upload_photo_to_telegram(bot: Bot, photo_path: str) -> str:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ –≤ Telegram –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç file_id"""
    try:
        # –°–æ–∑–¥–∞–µ–º FSInputFile –∏–∑ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É
        photo = FSInputFile(photo_path)
        result = await bot.send_photo(
            chat_id=ADMIN_IDS[0],  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–º—É –∞–¥–º–∏–Ω—É
            photo=photo
        )
        # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–º –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ file_id
        await bot.delete_message(
            chat_id=ADMIN_IDS[0],
            message_id=result.message_id
        )
        return result.photo[-1].file_id
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ {photo_path}: {e}")
        raise


async def create_regular_ad(bot: Bot, session, created_at=None):
    """–°–æ–∑–¥–∞–µ—Ç –æ–±—ã—á–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    description = random.choice(DESCRIPTIONS)
    price = random.choice(PRICES)
    manager = random.choice(MANAGERS)
    
    ad = Advertisement(
        description=description,
        price=price,
        manager_link=manager,
        is_promotional=False,
        created_at=created_at or datetime.utcnow(),
        views_count=0,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        last_shown=None  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ 
    )
    session.add(ad)
    session.flush()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º 2-4 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ Telegram
    images = get_random_images(random.randint(2, 4))
    for idx, image_path in enumerate(images):
        file_id = await upload_photo_to_telegram(bot, image_path)
        photo = Photo(
            advertisement_id=ad.id,
            photo_file_id=file_id,
            position=idx
        )
        session.add(photo)
    
    return ad

async def create_promo_ad(bot: Bot, session, created_at=None):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"""
    description = random.choice(PROMO_DESCRIPTIONS)
    
    ad = Advertisement(
        description=description,
        price="–†–ï–ö–õ–ê–ú–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï",
        manager_link="",
        is_promotional=True,
        created_at=created_at or datetime.utcnow(),
        views_count=0,  # –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        last_shown=None  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ 
    )
    session.add(ad)
    session.flush()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º 3-5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ Telegram
    images = get_random_images(random.randint(3, 5))
    for idx, image_path in enumerate(images):
        file_id = await upload_photo_to_telegram(bot, image_path)
        photo = Photo(
            advertisement_id=ad.id,
            photo_file_id=file_id,
            position=idx
        )
        session.add(photo)
    
    return ad

async def populate_database():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∏ –±–æ—Ç–∞
    engine = create_engine(DATABASE_URL)
    Base.metadata.create_all(engine)
    Session = sessionmaker(bind=engine)
    session = Session()
    bot = Bot(token=BOT_TOKEN)
    
    try:
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        session.query(Photo).delete()
        session.query(Advertisement).delete()
        
        print("–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
        base_date = datetime.now(UTC) - timedelta(days=30)
        for i in range(20):
            created_at = base_date + timedelta(days=i)
            print(f"–°–æ–∑–¥–∞—é –æ–±—ã—á–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ {i+1}/20...")
            await create_regular_ad(bot, session, created_at)
            session.commit()  # –ö–æ–º–º–∏—Ç–∏–º –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        for i in range(5):
            print(f"–°–æ–∑–¥–∞—é —Ä–µ–∫–ª–∞–º–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ {i+1}/5...")
            await create_promo_ad(bot, session)
            session.commit()  # –ö–æ–º–º–∏—Ç–∏–º –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
        print(f"–°–æ–∑–¥–∞–Ω–æ –æ–±—ã—á–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: 20")
        print(f"–°–æ–∑–¥–∞–Ω–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: 5")
        
    except Exception as e:
        session.rollback()
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise
    finally:
        session.close()
        await bot.session.close()

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(populate_database())